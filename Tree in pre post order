import java.util.*;
class Node
{
    int data;
    Node left,right;
    public Node(int val)
    {
        data=val;
        left=right=null;
    }
}
class tree
{
    Node create(int val)
    {
        return new Node(val);
    }
    Node insert(Node root,int val)
    {
        if(root==null)
        {
            return create(val);
        }
        else
        {
            if(val<root.data)
                root.left=insert(root.left,val);
            else
                root.right=insert(root.right,val);
        }
        return root;
    }
    public void preorder(Node root)
    {
        if(root!=null)
        {
            System.out.print(root.data+" ");
            preorder(root.left);
            preorder(root.right);
        }
    }
    public void inorder(Node root)
    {
        if(root!=null)
        {
            inorder(root.left);
            System.out.print(root.data+" ");
            inorder(root.right);
        }
    }
    public void postorder(Node root)
{
    if(root!=null)
    {
        postorder(root.left);
        postorder(root.right);
        System.out.print(root.data+" ");
    }
}
    public static void main(String[]args)
    {
        Scanner s=new Scanner(System.in);
        tree t=new tree();
        int k=s.nextInt();
        Node root=t.create(k);
        while(true)
        {
            int val=s.nextInt();
            if(val==-1)
                break;
            t.insert(root,val);
        }
        System.out.println("PREORDER");
        t.preorder(root);
        System.out.println("INORDER");
        t.inorder(root);
        System.out.println("POSTORDER");
        t.postorder(root);
    }
}
